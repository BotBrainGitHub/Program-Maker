' {$STAMP BS2}
' {$PBASIC 2.5}

'+++++++++++++++++++++++++++
'Servo Calibration Program
'First Draft JO 6/26/10
'Second Draft JO 7/1/10
'+++++++++++++++++++++++++++
'assume Left Whisker pin 1, Right Whisker pin 2
'assume left servo pin 12, right servo pin 13


btnwrk VAR Byte
Temp VAR Byte
Temp2 VAR Word
Temp3 VAR Word
counter VAR Nib
ServoNum VAR Word
pitch CON 3500
DEBUG CLS
start:
READ 0, Temp  'Track the number of resets, i.e. the location in the calibration cycle
WRITE 0, Temp + 1
IF (Temp + 1)> 5 THEN WRITE 0, 0
PAUSE 1000



DATA @0,0,0, 0,0  'Using Five data locations, 0-4
                          '0 is number of resets
                          '1 & 2 are Left Servo stop points
                          '3 & 4 are Right Servo stop points




SELECT Temp  'Temp is the number of resets

CASE 0   'First step in process, slow left servo to stop point
counter = 0
ServoNum = 730  'calibration start #  May need to change for different servos

    DEBUG 2,15,1,"ONE", CR
    DEBUG "Left servo should be moving.", CR
    DEBUG "Touch left whisker until it just stops", CR
    DEBUG "If you go too far, reverse with right whisker ", CR

   DO
    PULSOUT 12,ServoNum
    PAUSE 10
    BUTTON 1,0,255,250,btnwrk,1, NextNumLeft
    BUTTON 2,0,255,250,btnwrk,1, PrevNumLeft
    LeftFwd:
    DEBUG 2,1,8, "Center Number =  ", DEC ServoNum
    DEBUG 2,1,9,"Press Reset when Servo stops"
    WRITE 1,(ServoNum - 650)  'must reconstitute in "include" program
    'DEBUG CLS
    PAUSE 100
  LOOP

  CASE 1   'Second step in process, slow left servo to stop in reverse
counter = 0
ServoNum = 760  'calibration start #  May need to change for different servos

    DEBUG 2,15,1,"TWO", CR
    DEBUG "Left servo should be moving.", CR
    DEBUG "Touch left whisker until it just stops", CR
    DEBUG "Reverse with right ", CR


   DO
    PULSOUT 12,ServoNum
    PAUSE 10
    BUTTON 1,0,255,250,btnwrk,1, PrevNumLeft
    BUTTON 2,0,255,250,btnwrk,1, NextNumLeft
    LeftRev:
    DEBUG 2,1,8, "Center Number =  ", DEC ServoNum
    DEBUG 2,1,9,"Press Reset when Servo stops"
    WRITE 2,(ServoNum - 650)  'must reconstitute in "include" program
    'DEBUG CLS
    PAUSE 100
  LOOP

CASE 2   'Third step in process, slow right servo to stop point Forward
  Counter = 0
  ServoNum = 760 'calibration start #  May need to change for different servos

    DEBUG 2,15,1,"THREE", CR
    DEBUG "Right servo now slowly Forward.", CR
    DEBUG "Touch Right whisker until it just stops", CR
    DEBUG "If too far, use left whisker", CR
 DO
    PULSOUT 13,ServoNum
    PAUSE 10
    BUTTON 1,0,255,250,btnwrk,1, NextNumRight
    BUTTON 2,0,255,250,btnwrk,1, PrevNumRight
    RightFwd:
    DEBUG 2,1,8, "Center Number =  ", DEC ServoNum
    DEBUG 2,1,9,"Press Reset when Servo stops"
    WRITE 3,(ServoNum - 650)
    PAUSE 100
 LOOP

CASE 3   'Fourth step in process, slow right servo to stop point Reverse
  Counter = 0
  ServoNum = 720 'calibration start #  May need to change for different servos

    DEBUG 2,15,1,"FOUR", CR
    DEBUG "Right servo now slowly Reverse.", CR
    DEBUG "Touch Right whisker until it just stops", CR
    DEBUG "If too far, use left whisker", CR
 DO
    PULSOUT 13,ServoNum
    PAUSE 10
    BUTTON 1,0,255,250,btnwrk,1, PrevNumRight
    BUTTON 2,0,255,250,btnwrk,1, NextNumRight
    RightRev:
    DEBUG 2,1,8, "Servo Center Number =  ", DEC ServoNum
    DEBUG 2,1,9,"Reset when Servo stops"
    WRITE 4,(ServoNum - 650)
    PAUSE 100
 LOOP

CASE 4
    READ 1,Temp
    READ 2,Temp2
    Temp3 = (Temp + Temp2)/2      'calculate the average
    WRITE 1,Temp3
    DEBUG "Left= ", DEC (Temp3 + 650),CR
    READ 3,Temp
    READ 4,Temp2
    Temp3 = (Temp + Temp2)/2      'calculate the average
    WRITE 2,Temp3
    DEBUG "Right= ", DEC (Temp3 + 650),CR
    DEBUG  "Done calibrating",CR

  DO
    DEBUG 2,10,8, "Close these 2 windows to return to Editor"
    '  PAUSE 800
    'DEBUG 2,10,8, "         OR press RESET to start over               "
    '  PAUSE 800
  LOOP

CASE 5
  GOTO Start

ENDSELECT

NextNumLeft:
  ServoNum = ServoNum + 1
  GOSUB BeepUp
IF Temp = 1 THEN
  GOTO LeftFwd
  ELSE
    GOTO LeftRev
ENDIF

PrevNumLeft:
  ServoNum = ServoNum - 1
  GOSUB BeepDn
IF Temp = 1 THEN
  GOTO LeftFwd
  ELSE
    GOTO LeftRev
ENDIF

NextNumRight:
  ServoNum = ServoNum + 1
  GOSUB BeepUp
IF Temp = 3 THEN
  GOTO RightFwd
  ELSE
    GOTO RightRev
ENDIF

PrevNumRight:
  ServoNum = ServoNum - 1
  GOSUB BeepDn
IF Temp = 3 THEN
  GOTO RightFwd
  ELSE
    GOTO RightRev
ENDIF

BeepUp:
  FREQOUT 15,5,pitch +1200  'change time from 2 to 10
   PAUSE 1
   'FREQOUT 15,500,Pitch + 100
   'PAUSE 1
RETURN

BeepDn:
  FREQOUT 15,8,pitch + 500  'change time from 2 to 10
   PAUSE 1
   'FREQOUT 15,500,Pitch + 100
   'PAUSE 1
RETURN